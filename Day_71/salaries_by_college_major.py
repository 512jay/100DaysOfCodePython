import pandas as pd
# -*- coding: utf-8 -*-
"""Salaries_by_college_major.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17PZDzKIwo4si84oPkS2yJ3TKXMSHfl9e
"""

60 * 2

df = pd.read_csv('salaries_by_college_major.csv')

df.head()

df.shape

df.columns

df.isna()

df.tail()

clean_df = df.dropna()
clean_df.tail()

clean_df['Starting Median Salary']

clean_df['Mid-Career Median Salary'].max()

clean_df['Starting Median Salary'].max()

clean_df['Starting Median Salary'].idxmax()

clean_df['Starting Median Salary'].idxmax()

clean_df['Undergraduate Major'].loc[43]

clean_df['Undergraduate Major'][43]

clean_df.loc[43]

clean_df['Mid-Career Median Salary'].idxmax()

clean_df['Mid-Career Median Salary'][8]


clean_df.loc[8]

clean_df['Starting Median Salary'].min()

clean_df['Starting Median Salary'].idxmin()

clean_df.loc[49]

clean_df['Mid-Career Median Salary'].idxmin()

clean_df.loc[18]

print(clean_df['Mid-Career Median Salary'].max())
print(f"Index for the max mid career salary: {clean_df['Mid-Career Median Salary'].idxmax()}")
clean_df['Undergraduate Major'][clean_df['Mid-Career Median Salary'].idxmax()]

print(clean_df['Starting Median Salary'].min())
clean_df['Undergraduate Major'].loc[clean_df['Starting Median Salary'].idxmin()]

print(clean_df['Starting Median Salary'].min())
clean_df['Undergraduate Major'].loc[clean_df['Starting Median Salary'].idxmin()]

clean_df.loc[clean_df['Mid-Career Median Salary'].idxmin()]

clean_df['Mid-Career 90th Percentile Salary'] - clean_df['Mid-Career 10th Percentile Salary']

clean_df['Mid-Career 90th Percentile Salary'].subtract(clean_df['Mid-Career 10th Percentile Salary'])

spread_col = clean_df['Mid-Career 90th Percentile Salary'] - clean_df['Mid-Career 10th Percentile Salary']
clean_df.insert(1, "Spread", spread_col)
clean_df.head()


clean_df

low_risk = clean_df.sort_values('Spread')
low_risk[['Undergraduate Major', 'Spread']].head()

low_risk = clean_df.sort_values('Spread')
low_risk[['Undergraduate Major', 'Spread']].head()

# Using the .sort_values() method, can you find the degrees with the highest potential? Find the top 5 degrees with the highest values in the 90th percentile. 
clean_df.columns

highest_potential = clean_df.sort_values("Mid-Career 90th Percentile Salary", ascending=False)
highest_potential[['Undergraduate Major', 'Mid-Career 90th Percentile Salary']].head()

# find the degrees with the greatest spread in salaries. Which majors have the largest difference between high and low earners after graduation
greatest_spread = clean_df.sort_values('Spread')
greatest_spread[['Undergraduate Major', 'Spread']]

# find the degrees with the greatest spread in salaries. Which majors have the largest difference between high and low earners after graduation
greatest_spread = clean_df.sort_values('Spread')
greatest_spread[['Undergraduate Major', 'Spread']].head()



# find the degrees with the greatest spread in salaries. Which majors have the largest difference between high and low earners after graduation
greatest_spread = clean_df.sort_values('Spread', ascending=False)
greatest_spread[['Undergraduate Major', 'Spread']].head()

clean_df.groupby('Group').count()

clean_df.groupby('Group').mean()

pd.options.display.float_format = '{:,.2f}'.format

clean_df.groupby('Group').mean()

